(()=>{"use strict";var e={486:(e,t,s)=>{var n=s(5471),i=function(){var e=this,t=e._self._c;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},r=[];const a={name:"App"},o=a;var c=s(1656),l=(0,c.A)(o,i,r,!1,null,null,null);const d=l.exports;var u=s(173),h=s(5353),m=s(4335);const g="gowebsocket_token",f=e=>{localStorage.setItem(g,e)},p=()=>localStorage.getItem(g),C=()=>{localStorage.removeItem(g)},E=m.A.create({baseURL:"",timeout:1e4});E.interceptors.request.use(e=>{const t=p();return t&&(e.headers.Authorization=t),e},e=>Promise.reject(e)),E.interceptors.response.use(e=>e,e=>(401===e.response?.status&&(localStorage.removeItem("token"),localStorage.removeItem("userInfo"),window.location.href="/login"),Promise.reject(e)));const I={login:e=>E.post("/auth/login",e),logout:()=>E.post("/auth/logout"),getCurrentUser:()=>E.get("/auth/me")},S={getFriendList:()=>E.get("/friend/list"),addFriend:e=>E.post("/friend/add",{friendID:e}),deleteFriend:e=>E.delete(`/friend/${e}`)},v={getChatHistory:e=>E.get("/message/history",{params:e}),sendMessage:e=>E.post("/message/send",e),markAsRead:e=>E.put("/message/read",e),getUnreadCount:()=>E.get("/message/unread")},_={namespaced:!0,state:{token:localStorage.getItem("token")||null,isAuthenticated:!!localStorage.getItem("token"),loginLoading:!1,userInfo:JSON.parse(localStorage.getItem("userInfo")||"null")},mutations:{SET_TOKEN(e,t){e.token=t,e.isAuthenticated=!!t,t?f(t):C()},SET_LOGIN_LOADING(e,t){e.loginLoading=t},SET_USER_INFO(e,t){e.userInfo=t,t?localStorage.setItem("userInfo",JSON.stringify(t)):localStorage.removeItem("userInfo")},CLEAR_AUTH(e){e.token=null,e.isAuthenticated=!1,e.userInfo=null,C(),localStorage.removeItem("userInfo")}},actions:{async login({commit:e},{userID:t,appID:s="app_default_001"}){e("SET_LOGIN_LOADING",!0);try{const n=await I.login({userID:t,appID:s});if(200===n.data.code){const{token:t,user:s}=n.data.data;return e("SET_TOKEN",t),e("SET_USER_INFO",s),{success:!0,user:s,isNewUser:s.isNewUser}}return{success:!1,error:n.data.message}}catch(n){return console.error("登录失败:",n),{success:!1,error:n.message||"登录失败"}}finally{e("SET_LOGIN_LOADING",!1)}},async logout({commit:e}){try{await I.logout()}catch(t){console.error("登出失败:",t)}finally{e("CLEAR_AUTH"),e("user/CLEAR_USER_INFO",null,{root:!0}),e("friend/CLEAR_FRIENDS",null,{root:!0}),e("chat/CLEAR_CONVERSATIONS",null,{root:!0}),e("connection/SET_CONNECTION_STATUS","disconnected",{root:!0})}},async getCurrentUser({commit:e,state:t}){if(!t.token)return{success:!1,error:"未登录"};try{const t=await I.getCurrentUser();return 200===t.data.code?(e("SET_USER_INFO",t.data.data.user),{success:!0,user:t.data.data.user}):{success:!1,error:t.data.message}}catch(s){return console.error("获取用户信息失败:",s),{success:!1,error:s.message||"获取用户信息失败"}}}},getters:{isLoggedIn:e=>e.isAuthenticated&&e.token,currentUser:e=>e.userInfo}},T=_,D={namespaced:!0,state:{userInfo:null,appID:101,profile:null},mutations:{SET_USER_INFO(e,t){e.userInfo=t},SET_APP_ID(e,t){e.appID=t},SET_PROFILE(e,t){e.profile=t},CLEAR_USER_INFO(e){e.userInfo=null,e.profile=null}},actions:{async fetchProfile({commit:e},t){try{console.log("获取用户资料:",t)}catch(s){console.error("获取用户资料失败:",s)}}},getters:{currentUserID:e=>e.userInfo?.userID,currentNickname:e=>e.userInfo?.nickname,currentAvatar:e=>e.userInfo?.avatar}},N=D,A={namespaced:!0,state:{friendList:[],onlineUsers:[],selectedFriend:null,loadingFriends:!1},mutations:{SET_FRIEND_LIST(e,t){e.friendList=t},SET_ONLINE_USERS(e,t){e.onlineUsers=t},SET_SELECTED_FRIEND(e,t){e.selectedFriend=t},SET_LOADING_FRIENDS(e,t){e.loadingFriends=t},ADD_FRIEND(e,t){e.friendList.find(e=>e.userID===t.userID)||e.friendList.push(t)},REMOVE_FRIEND(e,t){e.friendList=e.friendList.filter(e=>e.userID!==t)},UPDATE_FRIEND_STATUS(e,{userID:t,isOnline:s}){const n=e.friendList.find(e=>e.userID===t);n&&(n.isOnline=s)},UPDATE_FRIEND_UNREAD(e,{userID:t,unreadCount:s}){const n=e.friendList.find(e=>e.userID===t);n&&(n.unreadCount=s)},CLEAR_FRIENDS(e){e.friendList=[],e.onlineUsers=[],e.selectedFriend=null}},actions:{async fetchFriendList({commit:e}){e("SET_LOADING_FRIENDS",!0);try{const t=await S.getFriendList();return 200===t.data.code?(e("SET_FRIEND_LIST",t.data.data.friends),{success:!0,friends:t.data.data.friends}):{success:!1,error:t.data.message}}catch(t){return console.error("获取好友列表失败:",t),{success:!1,error:t.message||"获取好友列表失败"}}finally{e("SET_LOADING_FRIENDS",!1)}},async addFriend({commit:e},t){try{const s=await S.addFriend(t);return 200===s.data.code?(e("ADD_FRIEND",s.data.data.friend),{success:!0,friend:s.data.data.friend}):{success:!1,error:s.data.message}}catch(s){return console.error("添加好友失败:",s),{success:!1,error:s.message||"添加好友失败"}}},async deleteFriend({commit:e},t){try{const s=await S.deleteFriend(t);return 200===s.data.code?(e("REMOVE_FRIEND",t),{success:!0}):{success:!1,error:s.data.message}}catch(s){return console.error("删除好友失败:",s),{success:!1,error:s.message||"删除好友失败"}}},selectFriend({commit:e},t){e("SET_SELECTED_FRIEND",t)},updateFriendOnlineStatus({commit:e},{userID:t,isOnline:s}){e("UPDATE_FRIEND_STATUS",{userID:t,isOnline:s})},updateFriendUnreadCount({commit:e},{userID:t,unreadCount:s}){e("UPDATE_FRIEND_UNREAD",{userID:t,unreadCount:s})}},getters:{onlineFriends:e=>e.friendList.filter(e=>e.isOnline),offlineFriends:e=>e.friendList.filter(e=>!e.isOnline),totalUnreadCount:e=>e.friendList.reduce((e,t)=>e+(t.unreadCount||0),0),getFriendByID:e=>t=>e.friendList.find(e=>e.userID===t)}},w=A,b={namespaced:!0,state:{conversations:{},currentConversation:null,loadingHistory:!1,sendingMessage:!1},mutations:{SET_CONVERSATION(e,{friendID:t,messages:s}){e.conversations[t]=s},ADD_MESSAGE(e,{friendID:t,message:s}){e.conversations[t]||(e.conversations[t]=[]);const n=e.conversations[t].find(e=>e.messageID===s.messageID);n||e.conversations[t].push(s)},PREPEND_MESSAGES(e,{friendID:t,messages:s}){e.conversations[t]||(e.conversations[t]=[]),e.conversations[t]=[...s,...e.conversations[t]]},SET_CURRENT_CONVERSATION(e,t){e.currentConversation=t},SET_LOADING_HISTORY(e,t){e.loadingHistory=t},SET_SENDING_MESSAGE(e,t){e.sendingMessage=t},CLEAR_CONVERSATIONS(e){e.conversations={},e.currentConversation=null},CLEAR_CONVERSATION(e,t){e.conversations[t]&&delete e.conversations[t]}},actions:{async loadChatHistory({commit:e,state:t},{friendID:s,page:n=1,limit:i=20}){e("SET_LOADING_HISTORY",!0);try{const t=await v.getChatHistory({friendID:s,page:n,limit:i});if(200===t.data.code){const{messages:i,hasMore:r}=t.data.data;return e(1===n?"SET_CONVERSATION":"PREPEND_MESSAGES",{friendID:s,messages:i}),{success:!0,messages:i,hasMore:r}}return{success:!1,error:t.data.message}}catch(r){return console.error("加载聊天记录失败:",r),{success:!1,error:r.message||"加载聊天记录失败"}}finally{e("SET_LOADING_HISTORY",!1)}},async sendMessage({commit:e,dispatch:t},{friendID:s,content:n,messageType:i="text"}){e("SET_SENDING_MESSAGE",!0);try{const r=await v.sendMessage({friendID:s,content:n,messageType:i});if(200===r.data.code){const n=r.data.data.message;return e("ADD_MESSAGE",{friendID:s,message:n}),t("friend/updateFriendUnreadCount",{userID:s,unreadCount:0},{root:!0}),{success:!0,message:n}}return{success:!1,error:r.data.message}}catch(r){return console.error("发送消息失败:",r),{success:!1,error:r.message||"发送消息失败"}}finally{e("SET_SENDING_MESSAGE",!1)}},async markAsRead({commit:e},t){try{const s=await v.markAsRead({friendID:t});return 200===s.data.code?(e("friend/UPDATE_FRIEND_UNREAD",{userID:t,unreadCount:0},{root:!0}),{success:!0}):{success:!1,error:s.data.message}}catch(s){return console.error("标记已读失败:",s),{success:!1,error:s.message||"标记已读失败"}}},receiveMessage({commit:e},{fromUserID:t,message:s}){e("ADD_MESSAGE",{friendID:t,message:s}),e("friend/UPDATE_FRIEND_UNREAD",{userID:t,unreadCount:(this.getters["friend/getFriendByID"](t)?.unreadCount||0)+1},{root:!0})},switchConversation({commit:e,dispatch:t},s){e("SET_CURRENT_CONVERSATION",s),t("markAsRead",s)}},getters:{getCurrentMessages:e=>e.currentConversation&&e.conversations[e.currentConversation]||[],getMessagesByFriend:e=>t=>e.conversations[t]||[],hasMessages:e=>t=>!!(e.conversations[t]&&e.conversations[t].length>0)}},F=b,O="ws://127.0.0.1:8089/acc",k={APP_ID:"app_default_001",DEFAULT_AVATAR:"/images/default-avatar.png",MESSAGE_PAGE_SIZE:20,HEARTBEAT_INTERVAL:3e4,RECONNECT_MAX_ATTEMPTS:5,RECONNECT_DELAY:1e3},y={LOGIN:"login",LOGOUT:"logout",HEARTBEAT:"heartbeat",MESSAGE:"msg",ENTER:"enter",EXIT:"exit",PING:"ping"},R={DISCONNECTED:"disconnected",CONNECTING:"connecting",CONNECTED:"connected",RECONNECTING:"reconnecting"},L=()=>`${Date.now()}-${Math.random().toString(36).substr(2,9)}`,M=e=>{if(!e)return"";const t=new Date(e),s=new Date,n=s-t;if(n<6e4)return"刚刚";if(n<36e5)return`${Math.floor(n/6e4)}分钟前`;if(t.toDateString()===s.toDateString())return t.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"});const i=new Date(s);return i.setDate(i.getDate()-1),t.toDateString()===i.toDateString()?`昨天 ${t.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"})}`:t.toLocaleDateString("zh-CN")+" "+t.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"})},U=e=>{if(!e)return"";const t=new Date(e),s=new Date;return t.toDateString()===s.toDateString()?t.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"}):t.toLocaleDateString("zh-CN",{month:"2-digit",day:"2-digit"})+" "+t.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"})},$=(e,t)=>{let s;return function(...n){const i=()=>{clearTimeout(s),e(...n)};clearTimeout(s),s=setTimeout(i,t)}},G=(e,t=!0)=>{e&&e.scrollTo({top:e.scrollHeight,behavior:t?"smooth":"auto"})},x=(e,t=10)=>!!e&&e.scrollHeight-e.scrollTop-e.clientHeight<t,H=()=>Math.floor(9e4*Math.random())+1e4,W=()=>{const e=Date.now().toString(36),t=Math.random().toString(36).substr(2,8);return`app_${e}_${t}`};class P{constructor(){this.ws=null,this.heartbeatTimer=null,this.reconnectTimer=null,this.maxReconnectAttempts=5,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.heartbeatInterval=3e4,this.isConnecting=!1,this.isDestroyed=!1,this.url="",this.userID="",this.messageQueue=[],this.onOpen=this.onOpen.bind(this),this.onMessage=this.onMessage.bind(this),this.onClose=this.onClose.bind(this),this.onError=this.onError.bind(this)}connect(e,t){return new Promise((s,n)=>{if(this.isDestroyed)n(new Error("WebSocket服务已销毁"));else if(this.isConnecting)n(new Error("正在连接中"));else if(this.ws&&this.ws.readyState===WebSocket.OPEN)s(this.ws);else if(t){this.url=e,this.token=t,this.isConnecting=!0;try{console.log(`开始连接WebSocket: ${e}`),console.log(`连接信息: hasToken=${!!t}`),V.commit("connection/SET_CONNECTION_STATUS",R.CONNECTING),this.ws=new WebSocket(e),this.ws.onopen=()=>{this.onOpen(),s(this.ws)},this.ws.onmessage=this.onMessage,this.ws.onclose=this.onClose,this.ws.onerror=e=>{this.onError(e),n(e)},setTimeout(()=>{this.isConnecting&&(this.isConnecting=!1,n(new Error("连接超时")))},1e4)}catch(i){this.isConnecting=!1,V.commit("connection/SET_CONNECTION_STATUS",R.DISCONNECTED),n(i)}}else n(new Error("token不能为空"))})}disconnect(){this.isDestroyed=!0,this.stopHeartbeat(),this.stopReconnect(),this.ws&&(this.ws.onopen=null,this.ws.onmessage=null,this.ws.onclose=null,this.ws.onerror=null,this.ws.readyState===WebSocket.OPEN&&this.ws.close(),this.ws=null),V.commit("connection/CLEAR_CONNECTION"),console.log("WebSocket连接已断开")}send(e){if(!this.ws||this.ws.readyState!==WebSocket.OPEN)return console.warn("WebSocket未连接，消息将加入队列"),this.messageQueue.push(e),!1;try{const t="string"===typeof e?e:JSON.stringify(e);return this.ws.send(t),console.log("发送WebSocket消息:",e),!0}catch(t){return console.error("发送消息失败:",t),!1}}sendLogin(e){if(!e)return void console.error("WebSocket登录缺少token参数");console.log("发送WebSocket登录消息:",{token:e.substring(0,20)+"..."});const t={seq:L(),cmd:y.LOGIN,data:{serviceToken:e}};this.send(t)}sendHeartbeat(){const e={seq:L(),cmd:y.HEARTBEAT,data:{}};return this.send(e)}onOpen(){console.log("WebSocket连接已建立"),this.isConnecting=!1,this.reconnectAttempts=0,V.commit("connection/SET_CONNECTION_STATUS",R.CONNECTED),V.commit("connection/SET_WEBSOCKET",this.ws),V.commit("connection/RESET_RECONNECT_ATTEMPTS");const e=this.token||V.state.auth.token;e?(console.log("WebSocket登录参数验证:",{hasToken:!!e}),this.sendLogin(e)):console.error("WebSocket登录失败: 缺少token",{savedToken:!!this.token,storeToken:!!V.state.auth.token}),this.startHeartbeat(),this.processMessageQueue()}onMessage(e){try{const t=JSON.parse(e.data);console.log("收到WebSocket消息:",t),this.handleMessage(t)}catch(t){console.error("解析WebSocket消息失败:",t)}}onClose(e){console.log("WebSocket连接已关闭",e.code,e.reason),this.isConnecting=!1,V.commit("connection/SET_CONNECTION_STATUS",R.DISCONNECTED),this.stopHeartbeat(),this.isDestroyed||1e3===e.code||this.attemptReconnect()}onError(e){console.error("WebSocket连接错误:",e),this.isConnecting=!1,V.commit("connection/SET_CONNECTION_STATUS",R.DISCONNECTED)}handleMessage(e){const{cmd:t,response:s}=e;switch(t){case y.MESSAGE:this.handleChatMessage(s);break;case y.ENTER:this.handleUserEnter(s);break;case y.EXIT:this.handleUserExit(s);break;case y.HEARTBEAT:this.handleHeartbeat(s);break;case y.LOGIN:this.handleLoginResponse(s);break;default:console.log("未处理的消息类型:",t)}}handleChatMessage(e){if(!e||!e.data)return;const{from:t,to:s,msg:n}=e.data,i={messageID:`ws_${Date.now()}_${t}`,fromUserID:t,toUserID:s||this.userID,content:n,messageType:"text",timestamp:(new Date).toISOString(),isRead:!1};V.dispatch("chat/receiveMessage",{fromUserID:t,message:i})}handleUserEnter(e){if(!e||!e.data)return;const{from:t}=e.data;console.log(`用户 ${t} 加入了聊天室`),V.dispatch("friend/updateFriendOnlineStatus",{userID:t,isOnline:!0})}handleUserExit(e){if(!e||!e.data)return;const{from:t}=e.data;console.log(`用户 ${t} 离开了聊天室`),V.dispatch("friend/updateFriendOnlineStatus",{userID:t,isOnline:!1})}handleHeartbeat(e){V.commit("connection/SET_LAST_HEARTBEAT",Date.now()),console.log("收到心跳响应")}handleLoginResponse(e){console.log("登录响应:",e),e&&e.data&&e.data.userID?(this.userID=e.data.userID,console.log("WebSocket登录成功，userID:",this.userID),V.commit("connection/SET_CONNECTION_STATUS",R.AUTHENTICATED)):console.error("登录响应中缺少userID信息:",e)}startHeartbeat(){this.stopHeartbeat(),this.heartbeatTimer=setInterval(()=>{this.sendHeartbeat()||(console.log("心跳发送失败，连接可能已断开"),this.stopHeartbeat())},this.heartbeatInterval),V.commit("connection/SET_HEARTBEAT_INTERVAL",this.heartbeatTimer)}stopHeartbeat(){this.heartbeatTimer&&(clearInterval(this.heartbeatTimer),this.heartbeatTimer=null),V.commit("connection/SET_HEARTBEAT_INTERVAL",null)}attemptReconnect(){if(this.isDestroyed||this.reconnectAttempts>=this.maxReconnectAttempts)return void console.log("达到最大重连次数或服务已销毁，停止重连");this.reconnectAttempts++;const e=this.reconnectDelay*this.reconnectAttempts;console.log(`${e}ms后尝试第${this.reconnectAttempts}次重连...`),V.commit("connection/SET_CONNECTION_STATUS",R.RECONNECTING),V.commit("connection/INCREMENT_RECONNECT_ATTEMPTS"),this.reconnectTimer=setTimeout(()=>{this.isDestroyed||this.connect(this.url,this.token).then(()=>{console.log("重连成功")}).catch(e=>{console.error("重连失败:",e),this.attemptReconnect()})},e)}stopReconnect(){this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null)}processMessageQueue(){while(this.messageQueue.length>0){const e=this.messageQueue.shift();this.send(e)}}isConnected(){return this.ws&&this.ws.readyState===WebSocket.OPEN}getConnectionStatus(){if(!this.ws)return R.DISCONNECTED;switch(this.ws.readyState){case WebSocket.CONNECTING:return R.CONNECTING;case WebSocket.OPEN:return R.CONNECTED;case WebSocket.CLOSING:case WebSocket.CLOSED:default:return R.DISCONNECTED}}}const B=new P,z=B,q={namespaced:!0,state:{status:"disconnected",ws:null,reconnectAttempts:0,maxReconnectAttempts:5,reconnectDelay:1e3,heartbeatInterval:null,lastHeartbeat:null},mutations:{SET_CONNECTION_STATUS(e,t){e.status=t},SET_WEBSOCKET(e,t){e.ws=t},SET_RECONNECT_ATTEMPTS(e,t){e.reconnectAttempts=t},INCREMENT_RECONNECT_ATTEMPTS(e){e.reconnectAttempts++},RESET_RECONNECT_ATTEMPTS(e){e.reconnectAttempts=0},SET_HEARTBEAT_INTERVAL(e,t){e.heartbeatInterval=t},SET_LAST_HEARTBEAT(e,t){e.lastHeartbeat=t},CLEAR_CONNECTION(e){e.status="disconnected",e.ws=null,e.reconnectAttempts=0,e.heartbeatInterval&&(clearInterval(e.heartbeatInterval),e.heartbeatInterval=null),e.lastHeartbeat=null}},actions:{connect({commit:e,dispatch:t},{url:s,token:n}){return z.connect(s,n)},disconnect({commit:e}){z.disconnect()},sendMessage({state:e},t){return z.send(t)}},getters:{isConnected:e=>"connected"===e.status,isConnecting:e=>"connecting"===e.status,isReconnecting:e=>"reconnecting"===e.status,connectionStatus:e=>e.status}},K=q;n["default"].use(h.Ay);const V=new h.Ay.Store({modules:{auth:T,user:N,friend:w,chat:F,connection:K},strict:!1});var j=function(){var e=this,t=e._self._c;return t("div",{staticClass:"login-container"},[t("div",{staticClass:"login-card"},[e._m(0),t("el-form",{ref:"loginForm",staticClass:"login-form",attrs:{model:e.loginForm,rules:e.loginRules},nativeOn:{submit:function(t){return t.preventDefault(),e.handleLogin.apply(null,arguments)}}},[t("el-form-item",{attrs:{prop:"userID"}},[t("el-input",{attrs:{type:"text",placeholder:"请输入用户ID","prefix-icon":"el-icon-user",size:"large",disabled:e.loading},nativeOn:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.handleLogin.apply(null,arguments)}},model:{value:e.loginForm.userID,callback:function(t){e.$set(e.loginForm,"userID",t)},expression:"loginForm.userID"}})],1),t("el-form-item",{attrs:{prop:"appID"}},[t("el-input",{attrs:{type:"text",placeholder:"设备AppID（自动生成）","prefix-icon":"el-icon-mobile-phone",size:"large",disabled:e.loading,readonly:""},model:{value:e.loginForm.appID,callback:function(t){e.$set(e.loginForm,"appID",t)},expression:"loginForm.appID"}},[t("template",{slot:"append"},[t("el-button",{attrs:{disabled:e.loading,icon:"el-icon-refresh",title:"重新生成AppID"},on:{click:e.regenerateAppId}},[e._v(" 重新生成 ")])],1)],2)],1),t("el-form-item",[t("el-button",{staticClass:"login-button",attrs:{type:"primary",size:"large",loading:e.loading,disabled:!e.loginForm.userID.trim()},on:{click:e.handleLogin}},[e._v(" "+e._s(e.loading?"登录中...":"登录")+" ")])],1)],1),e._m(1),t("div",{staticClass:"quick-login"},[t("p",[e._v("快速登录：")]),t("div",{staticClass:"quick-buttons"},e._l(e.quickLoginIds,function(s){return t("el-button",{key:s,attrs:{size:"small",disabled:e.loading},on:{click:function(t){return e.quickLogin(s)}}},[e._v(" 用户"+e._s(s)+" ")])}),1)])],1),e._m(2)])},Q=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"login-header"},[t("h1",[e._v("GoWebSocket IM")]),t("p",[e._v("分布式即时通讯系统")])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"login-tips"},[t("p",[e._v("提示：")]),t("ul",[t("li",[e._v("首次使用会自动注册账号")]),t("li",[e._v("输入任意用户ID即可开始聊天")]),t("li",[e._v("可以尝试输入：10001, 10002, 10003 等")])])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"footer"},[t("p",[e._v("© 2024 GoWebSocket IM - 基于Go + Vue2的即时通讯系统")])])}];const J={name:"LoginPage",data(){return{loginForm:{userID:"",appID:""},loginRules:{userID:[{required:!0,message:"请输入用户ID",trigger:"blur"},{min:3,max:20,message:"用户ID长度在 3 到 20 个字符",trigger:"blur"}],appID:[{required:!0,message:"AppID不能为空",trigger:"blur"}]},quickLoginIds:[10001,10002,10003,10004,10005]}},computed:{...(0,h.L8)("auth",["loginLoading"]),loading(){return this.loginLoading}},mounted(){this.$store.getters["auth/isLoggedIn"]&&this.$router.push("/chat"),this.loginForm.userID=H().toString(),this.loginForm.appID=W()},methods:{...(0,h.i0)("auth",["login"]),async handleLogin(){try{await this.$refs.loginForm.validate();const t=await this.login({userID:this.loginForm.userID.trim(),appID:this.loginForm.appID});if(t.success){this.$message.success(t.isNewUser?"注册并登录成功！":"登录成功！");try{await z.connect(O,this.$store.state.auth.token),console.log("WebSocket连接成功")}catch(e){console.error("WebSocket连接失败:",e)}const s=this.$route.query.redirect||"/chat";this.$router.push(s)}else this.$message.error(t.error||"登录失败")}catch(t){console.error("登录失败:",t)}},quickLogin(e){this.loginForm.userID=e.toString(),this.handleLogin()},regenerateAppId(){this.loginForm.appID=W(),this.$message.success("AppID已重新生成")}}},Y=J;var X=(0,c.A)(Y,j,Q,!1,null,"0496e318",null);const Z=X.exports;var ee=function(){var e=this,t=e._self._c;return t("div",{staticClass:"chat-room"},[t("div",{staticClass:"sidebar",class:{show:e.showSidebar}},[t("div",{staticClass:"user-header"},[t("div",{staticClass:"user-info"},[t("div",{staticClass:"avatar"},[e.currentUser?.avatar?t("img",{attrs:{src:e.currentUser.avatar,alt:e.currentUser.nickname}}):t("span",[e._v(e._s(e.currentUser?.nickname?.charAt(0)||"U"))])]),t("div",{staticClass:"user-details"},[t("div",{staticClass:"nickname"},[e._v(e._s(e.currentUser?.nickname||"未知用户"))]),t("div",{staticClass:"status",class:e.connectionStatus},[t("i",{staticClass:"status-dot"}),e._v(" "+e._s(e.statusText)+" ")])])]),t("div",{staticClass:"user-actions"},[t("el-dropdown",{on:{command:e.handleUserAction}},[t("span",{staticClass:"el-dropdown-link"},[t("i",{staticClass:"el-icon-more"})]),t("el-dropdown-menu",{attrs:{slot:"dropdown"},slot:"dropdown"},[t("el-dropdown-item",{attrs:{command:"addFriend"}},[e._v("添加好友")]),t("el-dropdown-item",{attrs:{command:"settings"}},[e._v("设置")]),t("el-dropdown-item",{attrs:{command:"logout"}},[e._v("退出登录")])],1)],1)],1)]),t("FriendList",{attrs:{friends:e.friendList,"selected-friend":e.selectedFriend,loading:e.loadingFriends},on:{"select-friend":e.handleSelectFriend,"add-friend":e.handleAddFriend}})],1),t("div",{staticClass:"main-content"},[e.selectedFriend?t("ChatWindow",{attrs:{friend:e.selectedFriend,messages:e.currentMessages,loading:e.loadingHistory,sending:e.sendingMessage},on:{"send-message":e.handleSendMessage,"load-more":e.handleLoadMore}}):t("div",{staticClass:"welcome-screen"},[t("div",{staticClass:"welcome-content"},[t("i",{staticClass:"el-icon-chat-line-round welcome-icon"}),t("h3",[e._v("欢迎使用 GoWebSocket IM")]),t("p",[e._v("选择一个好友开始聊天")]),t("el-button",{attrs:{type:"primary"},on:{click:e.handleAddFriend}},[t("i",{staticClass:"el-icon-plus"}),e._v(" 添加好友 ")])],1)])],1),e.showSidebar?t("div",{staticClass:"sidebar-overlay",on:{click:function(t){e.showSidebar=!1}}}):e._e(),t("el-dialog",{attrs:{title:"添加好友",visible:e.addFriendDialog,width:"400px"},on:{"update:visible":function(t){e.addFriendDialog=t},close:e.resetAddFriendForm}},[t("el-form",{ref:"addFriendForm",attrs:{model:e.addFriendForm,rules:e.addFriendRules}},[t("el-form-item",{attrs:{label:"用户ID",prop:"friendID"}},[t("el-input",{attrs:{placeholder:"请输入要添加的用户ID"},nativeOn:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.confirmAddFriend.apply(null,arguments)}},model:{value:e.addFriendForm.friendID,callback:function(t){e.$set(e.addFriendForm,"friendID",t)},expression:"addFriendForm.friendID"}})],1)],1),t("div",{staticClass:"dialog-footer",attrs:{slot:"footer"},slot:"footer"},[t("el-button",{on:{click:function(t){e.addFriendDialog=!1}}},[e._v("取 消")]),t("el-button",{attrs:{type:"primary",loading:e.addingFriend},on:{click:e.confirmAddFriend}},[e._v(" "+e._s(e.addingFriend?"添加中...":"确 定")+" ")])],1)],1)],1)},te=[],se=function(){var e=this,t=e._self._c;return t("div",{staticClass:"friend-list"},[t("div",{staticClass:"search-section"},[t("el-input",{attrs:{placeholder:"搜索好友...","prefix-icon":"el-icon-search",size:"small",clearable:""},on:{input:e.handleSearch},model:{value:e.searchKeyword,callback:function(t){e.searchKeyword=t},expression:"searchKeyword"}})],1),e.onlineFriends.length>0?t("div",{staticClass:"friend-section"},[t("div",{staticClass:"section-header"},[t("span",{staticClass:"section-title"},[e._v("在线好友 ("+e._s(e.onlineFriends.length)+")")]),t("i",{staticClass:"el-icon-arrow-down toggle-icon",class:{collapsed:!e.showOnline},on:{click:function(t){e.showOnline=!e.showOnline}}})]),t("div",{directives:[{name:"show",rawName:"v-show",value:e.showOnline,expression:"showOnline"}],staticClass:"friend-items"},e._l(e.filteredOnlineFriends,function(s){return t("div",{key:s.userID,staticClass:"friend-item",class:{active:e.selectedFriend?.userID===s.userID},on:{click:function(t){return e.$emit("select-friend",s)}}},[t("div",{staticClass:"avatar-container"},[t("div",{staticClass:"avatar"},[s.avatar?t("img",{attrs:{src:s.avatar,alt:s.nickname}}):t("span",[e._v(e._s(s.nickname?.charAt(0)||"U"))])]),t("div",{staticClass:"online-status online"})]),t("div",{staticClass:"friend-info"},[t("div",{staticClass:"friend-name"},[e._v(e._s(s.nickname))]),t("div",{staticClass:"last-seen"},[e._v("在线")])]),t("div",{staticClass:"friend-actions"},[s.unreadCount>0?t("el-badge",{staticClass:"unread-badge",attrs:{value:s.unreadCount>99?"99+":s.unreadCount}}):e._e()],1)])}),0)]):e._e(),e.offlineFriends.length>0?t("div",{staticClass:"friend-section"},[t("div",{staticClass:"section-header"},[t("span",{staticClass:"section-title"},[e._v("离线好友 ("+e._s(e.offlineFriends.length)+")")]),t("i",{staticClass:"el-icon-arrow-down toggle-icon",class:{collapsed:!e.showOffline},on:{click:function(t){e.showOffline=!e.showOffline}}})]),t("div",{directives:[{name:"show",rawName:"v-show",value:e.showOffline,expression:"showOffline"}],staticClass:"friend-items"},e._l(e.filteredOfflineFriends,function(s){return t("div",{key:s.userID,staticClass:"friend-item",class:{active:e.selectedFriend?.userID===s.userID},on:{click:function(t){return e.$emit("select-friend",s)}}},[t("div",{staticClass:"avatar-container"},[t("div",{staticClass:"avatar"},[s.avatar?t("img",{attrs:{src:s.avatar,alt:s.nickname}}):t("span",[e._v(e._s(s.nickname?.charAt(0)||"U"))])]),t("div",{staticClass:"online-status offline"})]),t("div",{staticClass:"friend-info"},[t("div",{staticClass:"friend-name"},[e._v(e._s(s.nickname))]),t("div",{staticClass:"last-seen"},[e._v(e._s(e.formatLastSeen(s.lastSeen)))])]),t("div",{staticClass:"friend-actions"},[s.unreadCount>0?t("el-badge",{staticClass:"unread-badge",attrs:{value:s.unreadCount>99?"99+":s.unreadCount}}):e._e()],1)])}),0)]):e._e(),0!==e.friends.length||e.loading?e._e():t("div",{staticClass:"empty-state"},[t("i",{staticClass:"el-icon-user empty-icon"}),t("p",[e._v("暂无好友")]),t("el-button",{attrs:{type:"text"},on:{click:function(t){return e.$emit("add-friend")}}},[t("i",{staticClass:"el-icon-plus"}),e._v(" 添加好友 ")])],1),e.searchKeyword&&0===e.filteredFriends.length?t("div",{staticClass:"empty-state"},[t("i",{staticClass:"el-icon-search empty-icon"}),t("p",[e._v("未找到相关好友")])]):e._e(),e.loading?t("div",{staticClass:"loading-state"},[t("i",{staticClass:"el-icon-loading"}),t("p",[e._v("加载中...")])]):e._e(),e.friends.length>0?t("div",{staticClass:"add-friend-btn"},[t("el-button",{attrs:{type:"primary",size:"small",icon:"el-icon-plus"},on:{click:function(t){return e.$emit("add-friend")}}},[e._v(" 添加好友 ")])],1):e._e()])},ne=[];const ie={name:"FriendList",props:{friends:{type:Array,default:()=>[]},selectedFriend:{type:Object,default:null},loading:{type:Boolean,default:!1}},data(){return{searchKeyword:"",showOnline:!0,showOffline:!0,filteredFriends:[]}},computed:{onlineFriends(){return this.friends.filter(e=>e.isOnline)},offlineFriends(){return this.friends.filter(e=>!e.isOnline)},filteredOnlineFriends(){return this.filterFriends(this.onlineFriends)},filteredOfflineFriends(){return this.filterFriends(this.offlineFriends)}},watch:{friends:{handler(){this.updateFilteredFriends()},immediate:!0}},created(){this.debouncedSearch=$(this.updateFilteredFriends,300)},methods:{handleSearch(){this.debouncedSearch()},updateFilteredFriends(){this.filteredFriends=this.filterFriends(this.friends)},filterFriends(e){if(!this.searchKeyword.trim())return e;const t=this.searchKeyword.toLowerCase();return e.filter(e=>e.nickname?.toLowerCase().includes(t)||e.userID?.toLowerCase().includes(t))},formatLastSeen(e){return e?M(e):"很久之前"}}},re=ie;var ae=(0,c.A)(re,se,ne,!1,null,"3bec9ebf",null);const oe=ae.exports;var ce=function(){var e=this,t=e._self._c;return t("div",{staticClass:"chat-window"},[t("div",{staticClass:"chat-header"},[t("div",{staticClass:"friend-info"},[t("div",{staticClass:"avatar"},[e.friend.avatar?t("img",{attrs:{src:e.friend.avatar,alt:e.friend.nickname}}):t("span",[e._v(e._s(e.friend.nickname?.charAt(0)||"U"))])]),t("div",{staticClass:"friend-details"},[t("div",{staticClass:"friend-name"},[e._v(e._s(e.friend.nickname))]),t("div",{staticClass:"friend-status",class:{online:e.friend.isOnline}},[t("i",{staticClass:"status-dot"}),e._v(" "+e._s(e.friend.isOnline?"在线":"离线")+" ")])])]),t("div",{staticClass:"chat-actions"},[t("el-button",{attrs:{size:"mini",icon:"el-icon-more",circle:""},on:{click:e.showChatMenu}})],1)]),t("div",{ref:"messageList",staticClass:"message-list",on:{scroll:e.handleScroll}},[e.loading?t("div",{staticClass:"loading-more"},[t("i",{staticClass:"el-icon-loading"}),t("span",[e._v("加载中...")])]):e._e(),e._l(e.messages,function(s){return t("div",{key:s.messageID,staticClass:"message-item",class:{own:e.isOwnMessage(s)}},[t("div",{staticClass:"message-avatar"},[t("div",{staticClass:"avatar"},[e.getMessageAvatar(s)?t("img",{attrs:{src:e.getMessageAvatar(s)}}):t("span",[e._v(e._s(e.getMessageNickname(s)?.charAt(0)||"U"))])])]),t("div",{staticClass:"message-content"},[t("div",{staticClass:"message-info"},[t("span",{staticClass:"sender-name"},[e._v(e._s(e.getMessageNickname(s)))]),t("span",{staticClass:"send-time"},[e._v(e._s(e.formatMessageTime(s.timestamp)))])]),t("div",{staticClass:"message-bubble",class:{own:e.isOwnMessage(s)}},[t("div",{staticClass:"bubble-content"},[e._v(" "+e._s(s.content)+" ")])])])])}),0!==e.messages.length||e.loading?e._e():t("div",{staticClass:"empty-messages"},[t("i",{staticClass:"el-icon-chat-dot-round"}),t("p",[e._v("暂无聊天记录，发送第一条消息开始聊天吧！")])])],2),t("div",{staticClass:"message-input"},[t("div",{staticClass:"input-toolbar"},[t("el-button",{attrs:{size:"mini",icon:"el-icon-picture",circle:"",title:"发送图片"}}),t("el-button",{attrs:{size:"mini",icon:"el-icon-paperclip",circle:"",title:"发送文件"}}),t("el-button",{attrs:{size:"mini",icon:"el-icon-chat-dot-square",circle:"",title:"表情"}})],1),t("div",{staticClass:"input-area"},[t("el-input",{ref:"messageInput",attrs:{type:"textarea",rows:3,placeholder:"输入消息内容，按 Ctrl+Enter 发送",resize:"none",disabled:e.sending},nativeOn:{keydown:function(t){return e.handleKeyDown.apply(null,arguments)}},model:{value:e.messageContent,callback:function(t){e.messageContent=t},expression:"messageContent"}}),t("div",{staticClass:"input-actions"},[t("el-button",{attrs:{type:"primary",size:"small",loading:e.sending,disabled:!e.messageContent.trim()},on:{click:e.sendMessage}},[e._v(" "+e._s(e.sending?"发送中...":"发送")+" ")])],1)],1)])])},le=[];const de={name:"ChatWindow",props:{friend:{type:Object,required:!0},messages:{type:Array,default:()=>[]},loading:{type:Boolean,default:!1},sending:{type:Boolean,default:!1}},data(){return{messageContent:"",autoScroll:!0,lastMessageCount:0}},computed:{...(0,h.L8)("auth",["currentUser"])},watch:{messages:{handler(e){this.$nextTick(()=>{e.length>this.lastMessageCount&&this.autoScroll&&this.scrollToBottom(),this.lastMessageCount=e.length})},immediate:!0},friend:{handler(){this.messageContent="",this.$nextTick(()=>{this.scrollToBottom(),this.focusInput()})},immediate:!0}},mounted(){this.focusInput(),this.scrollToBottom()},methods:{isOwnMessage(e){return e.fromUserID===this.currentUser?.userID},getMessageNickname(e){return this.isOwnMessage(e)?this.currentUser?.nickname||"我":this.friend?.nickname||`用户${e.fromUserID}`},getMessageAvatar(e){return this.isOwnMessage(e)?this.currentUser?.avatar:this.friend?.avatar},formatMessageTime(e){return U(e)},handleKeyDown(e){e.ctrlKey&&"Enter"===e.key&&(e.preventDefault(),this.sendMessage())},sendMessage(){const e=this.messageContent.trim();e&&!this.sending&&(this.$emit("send-message",e),this.messageContent="",this.$nextTick(()=>{this.scrollToBottom(),this.focusInput()}))},focusInput(){this.$refs.messageInput?.$refs?.textarea?.focus()},scrollToBottom(){const e=this.$refs.messageList;e&&G(e)},handleScroll(){const e=this.$refs.messageList;e&&(this.autoScroll=x(e),0===e.scrollTop&&this.messages.length>0&&!this.loading&&this.$emit("load-more"))},showChatMenu(){this.$message.info("聊天菜单功能开发中...")}}},ue=de;var he=(0,c.A)(ue,ce,le,!1,null,"12eb6c50",null);const me=he.exports,ge={name:"ChatRoom",components:{FriendList:oe,ChatWindow:me},data(){return{showSidebar:!1,addFriendDialog:!1,addingFriend:!1,addFriendForm:{friendID:""},addFriendRules:{friendID:[{required:!0,message:"请输入用户ID",trigger:"blur"},{min:3,max:20,message:"用户ID长度在 3 到 20 个字符",trigger:"blur"}]}}},computed:{...(0,h.aH)("auth",["userInfo"]),...(0,h.aH)("friend",["friendList","selectedFriend","loadingFriends"]),...(0,h.aH)("chat",["loadingHistory","sendingMessage"]),...(0,h.aH)("connection",["status"]),...(0,h.L8)("auth",["currentUser"]),...(0,h.L8)("chat",["getCurrentMessages"]),...(0,h.L8)("connection",["connectionStatus"]),currentMessages(){return this.getCurrentMessages},statusText(){switch(this.connectionStatus){case"connected":return"在线";case"connecting":return"连接中...";case"reconnecting":return"重连中...";case"disconnected":default:return"离线"}}},async mounted(){await this.initializeApp()},beforeDestroy(){this.disconnect()},methods:{...(0,h.i0)("auth",["logout"]),...(0,h.i0)("friend",["fetchFriendList","addFriend","selectFriend"]),...(0,h.i0)("chat",["loadChatHistory","sendMessage","switchConversation"]),...(0,h.i0)("connection",["connect","disconnect"]),async initializeApp(){try{await this.fetchFriendList();const e=this.$store.state.auth.token,t=this.connectionStatus;console.log("ChatRoom初始化 - 当前连接状态:",t),console.log("ChatRoom初始化 - 是否有token:",!!e),e&&"connected"!==t&&"connecting"!==t?(console.log("ChatRoom: 检测到未连接状态，尝试建立WebSocket连接"),await this.connect({url:O,token:e})):e?console.log("ChatRoom: WebSocket已连接或正在连接中，跳过连接步骤"):(console.warn("未找到token，无法建立WebSocket连接"),this.$message.warning("登录状态异常，请重新登录"))}catch(e){console.error("初始化应用失败:",e),"正在连接中"!==e.message&&"WebSocket服务已销毁"!==e.message&&this.$message.error("初始化失败，请刷新页面重试")}},handleSelectFriend(e){this.selectFriend(e),this.switchConversation(e.userID),this.loadChatHistory({friendID:e.userID,page:1,limit:k.MESSAGE_PAGE_SIZE}),window.innerWidth<=768&&(this.showSidebar=!1)},async handleSendMessage(e){if(!this.selectedFriend||!e.trim())return;const t=await this.sendMessage({friendID:this.selectedFriend.userID,content:e.trim(),messageType:"text"});t.success||this.$message.error(t.error||"发送消息失败")},async handleLoadMore(){this.selectedFriend&&console.log("加载更多消息")},handleUserAction(e){switch(e){case"addFriend":this.handleAddFriend();break;case"settings":this.$message.info("设置功能开发中...");break;case"logout":this.handleLogout();break}},handleAddFriend(){this.addFriendDialog=!0},async confirmAddFriend(){try{await this.$refs.addFriendForm.validate(),this.addingFriend=!0;const e=await this.addFriend(this.addFriendForm.friendID.trim());e.success?(this.$message.success("添加好友成功"),this.addFriendDialog=!1,this.resetAddFriendForm()):this.$message.error(e.error||"添加好友失败")}catch(e){console.error("添加好友失败:",e)}finally{this.addingFriend=!1}},resetAddFriendForm(){this.addFriendForm.friendID="",this.$refs.addFriendForm?.resetFields()},async handleLogout(){try{await this.$confirm("确定要退出登录吗？","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await this.logout(),this.$router.push("/login")}catch(e){}}}},fe=ge;var pe=(0,c.A)(fe,ee,te,!1,null,"50d1bc33",null);const Ce=pe.exports;n["default"].use(u.Ay);const Ee=[{path:"/",redirect:"/chat"},{path:"/login",name:"Login",component:Z,meta:{title:"登录",requiresAuth:!1}},{path:"/chat",name:"ChatRoom",component:Ce,meta:{title:"聊天室",requiresAuth:!0}}],Ie=new u.Ay({mode:"history",base:"/",routes:Ee});Ie.beforeEach((e,t,s)=>{e.meta.title&&(document.title=`${e.meta.title} - GoWebSocket IM`),e.meta.requiresAuth?V.getters["auth/isLoggedIn"]?s():s({name:"Login",query:{redirect:e.fullPath}}):"Login"===e.name&&V.getters["auth/isLoggedIn"]?s({name:"ChatRoom"}):s()});const Se=Ie;var ve=s(1052),_e=s.n(ve);async function Te(){const e=localStorage.getItem("gowebsocket_token");if(e)try{console.log("检测到本地token，设置到store中"),V.commit("auth/SET_TOKEN",e),console.log("token已设置到store，WebSocket连接将由具体页面组件负责")}catch(t){console.error("初始化token失败:",t),console.log("清理无效的token缓存"),localStorage.removeItem("gowebsocket_token"),localStorage.removeItem("userInfo"),V.dispatch("auth/logout")}else console.log("未检测到本地token，需要用户手动登录")}n["default"].use(_e()),n["default"].config.productionTip=!1,new n["default"]({router:Se,store:V,render:e=>e(d),async created(){await Te()}}).$mount("#app")}},t={};function s(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={id:n,loaded:!1,exports:{}};return e[n](r,r.exports,s),r.loaded=!0,r.exports}s.m=e,(()=>{s.amdO={}})(),(()=>{var e=[];s.O=(t,n,i,r)=>{if(!n){var a=1/0;for(d=0;d<e.length;d++){for(var[n,i,r]=e[d],o=!0,c=0;c<n.length;c++)(!1&r||a>=r)&&Object.keys(s.O).every(e=>s.O[e](n[c]))?n.splice(c--,1):(o=!1,r<a&&(a=r));if(o){e.splice(d--,1);var l=i();void 0!==l&&(t=l)}}return t}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[n,i,r]}})(),(()=>{s.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;return s.d(t,{a:t}),t}})(),(()=>{s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}})(),(()=>{s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{s.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}})(),(()=>{s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e)})(),(()=>{var e={524:0};s.O.j=t=>0===e[t];var t=(t,n)=>{var i,r,[a,o,c]=n,l=0;if(a.some(t=>0!==e[t])){for(i in o)s.o(o,i)&&(s.m[i]=o[i]);if(c)var d=c(s)}for(t&&t(n);l<a.length;l++)r=a[l],s.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return s.O(d)},n=self["webpackChunkgowebsocket_frontend"]=self["webpackChunkgowebsocket_frontend"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var n=s.O(void 0,[504],()=>s(486));n=s.O(n)})();
//# sourceMappingURL=app.2cbff0d2.js.map